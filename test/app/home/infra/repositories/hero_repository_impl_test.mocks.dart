// Mocks generated by Mockito 5.0.16 from annotations
// in marvel_heroes/test/app/home/infra/repositories/hero_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:marvel_heroes/app/home/infra/models/result_comic.dart' as _i5;
import 'package:marvel_heroes/app/home/infra/models/result_hero.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

import 'hero_repository_impl_test.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [HeroDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHeroDatasource extends _i1.Mock implements _i2.HeroDatasource {
  MockHeroDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String toString() => super.toString();
  @override
  _i3.Future<List<_i4.ResultHeroModel>> fetchHero(int? offset, int? limit) =>
      (super.noSuchMethod(Invocation.method(#fetchHero, [offset, limit]),
              returnValue: Future<List<_i4.ResultHeroModel>>.value(
                  <_i4.ResultHeroModel>[]))
          as _i3.Future<List<_i4.ResultHeroModel>>);
  @override
  _i3.Future<List<_i5.ResultComicModel>> fetchHeroComics(
          int? heroId, int? offset, int? limit) =>
      (super.noSuchMethod(
              Invocation.method(#fetchHeroComics, [heroId, offset, limit]),
              returnValue: Future<List<_i5.ResultComicModel>>.value(
                  <_i5.ResultComicModel>[]))
          as _i3.Future<List<_i5.ResultComicModel>>);
}
